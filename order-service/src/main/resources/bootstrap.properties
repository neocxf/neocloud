server.port=9006
spring.application.name=order-service
management.endpoints.web.exposure.include=*
spring.cloud.config.uri=http://${CONFIG_URI:localhost}:8888
spring.cloud.refresh.refreshable=none
spring.cloud.config.allow-override=true
dubbo.registry.address=zookeeper://${zk_addr:localhost}:2181
logging.level.org.apache=info

#spring.shardingsphere.props.sql.show=true
#spring.shardingsphere.datasource.names=ds0,ds1
#
#spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://192.168.56.2:3306/order?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=root
#
#spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://192.168.56.3:3306/order?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=root
#
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{user_id % 2}
#spring.shardingsphere.sharding.binding-tables=order,order_item
##spring.shardingsphere.sharding.broadcast-tables=t_address
#
#spring.shardingsphere.sharding.tables.order.actual-data-nodes=ds$->{0..1}.order_$->{0..1}
#spring.shardingsphere.sharding.tables.order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.order.table-strategy.inline.algorithm-expression=order_$->{order_id % 2}
#spring.shardingsphere.sharding.tables.order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.order.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.order.key-generator.props.worker.id=123
#spring.shardingsphere.sharding.tables.order_item.actual-data-nodes=ds$->{0..1}.order_item_$->{0..1}
#spring.shardingsphere.sharding.tables.order_item.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.order_item.table-strategy.inline.algorithm-expression=order_item_$->{order_id % 2}
#spring.shardingsphere.sharding.tables.order_item.key-generator.column=order_item_id
#spring.shardingsphere.sharding.tables.order_item.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.order_item.key-generator.props.worker.id=123
#spring.shardingsphere.enabled=true
# redis
spring.redis.host=192.168.56.16
spring.redis.port=8001
spring.redis.password=
spring.redis.jedis.pool.max-active=500
spring.redis.jedis.pool.max-idle=1000
spring.redis.jedis.pool.max-wait=6000ms
spring.redis.jedis.pool.min-idle=4


logging.level.top.neospot.cloud=debug

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.56.16:3306/order?useSSL=false
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.initialization-mode=always
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.base-packages=top.neospot.cloud.order.mapper
mybatis.mapper-locations=top.neospot.cloud
mybatis-plus.global-config.db-config.logic-delete-value=1
mybatis-plus.global-config.db-config.logic-not-delete-value=0